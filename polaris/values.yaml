---
config: |
  resources:
    cpuRequestsMissing: warning
    cpuLimitsMissing: warning
    memoryRequestsMissing: warning
    memoryLimitsMissing: warning
  images:
    tagNotSpecified: error
  healthChecks:
    readinessProbeMissing: warning
    livenessProbeMissing: warning
  networking:
    hostNetworkSet: warning
    hostPortSet: warning
  security:
    hostIPCSet: error
    hostPIDSet: error
    notReadOnlyRootFileSystem: warning
    privilegeEscalationAllowed: error
    runAsRootAllowed: warning
    runAsPrivileged: error
    capabilities:
      error:
        ifAnyAdded:
          - SYS_ADMIN
          - NET_ADMIN
          - ALL
      warning:
        ifAnyAddedBeyond:
          - CHOWN
          - DAC_OVERRIDE
          - FSETID
          - FOWNER
          - MKNOD
          - NET_RAW
          - SETGID
          - SETUID
          - SETFCAP
          - SETPCAP
          - NET_BIND_SERVICE
          - SYS_CHROOT
          - KILL
          - AUDIT_WRITE
  controllers_to_scan:
    - Deployments
    - StatefulSets
    - DaemonSets
    - Jobs
    - CronJobs
    - ReplicationControllers

dashboard:
  enable: true
  replicas: 1
  service:
    type: ClusterIP
    lables:
      system.monitoring: prometheus
    annotations:
      keel.sh/policy: major         # update policy (available: patch, minor, major, all, force)
      keel.sh/trigger: poll         # enable active repository checking (webhooks and GCR would still work)
      keel.sh/approvals: "0"        # required approvals to update
      keel.sh/match-tag: "true"     # only makes a difference when used with 'force' policy, will only update if tag matches :dev->:dev, :prod->:prod
      keel.sh/notify: chan1,chan2   # chat channels to sent notification to
      keel.sh/pollSchedule: "@every 10m"
  image:
    repository: quay.io/fairwinds/polaris
    tag: 0.6
    pullPolicy: Always
    imagePullSecrets: []
  nodeSelector: {}
  tolerations: []

ingress:
  enabled: true
  hosts:
    - polaris.minikube
  
  annotations:
    kubernetes.io/ingress.class: "contour"
    monitoring: prometheus # prometheus ServiceMonitor discovery tag
  
  tls:


webhook:
  enable: true
  replicas: 1
  image:
    repository: quay.io/fairwinds/polaris
    tag: 0.6
    pullPolicy: Always
    imagePullSecrets: []
  nodeSelector: {}
  tolerations: []

audit:
  enable: true
  cleanup: false
  outputURL: "http://polaris.minikube"
  image:
    repository: quay.io/fairwinds/polaris
    tag: 0.6
    pullPolicy: Always
    imagePullSecrets: []

rbac:
  create: true

templateOnly: false
