apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: require-namespace-annotations
spec:
  validationFailureAction: audit
  background: true
  rules:
  - name: require-namespace-annotations
    match:
      resources:
        kinds:
        - Namespace
    validate:
      message: "You must have annotation `annotations` with value `iam.amazonaws.com/permitted: \".*\"` set on all new namespaces."
      pattern:
        metadata:
          annotations:
            iam.amazonaws.com/permitted: ".*"

---

apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: all-containers-need-requests-and-limits
spec:
  validationFailureAction: audit
  rules:
  - name: all-containers-need-requests-and-limits
    match:
      resources:
        kinds:
        - Pod
    validate:
      message: "All containers must have CPU and memory resource requests and limits defined."
      pattern:
        spec:
          containers:
          - name: "*"
            resources:
              limits:
                memory: "?*"
                cpu: "?*"
              requests:
                memory: "?*"
                cpu: "?*m"

---

apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: add-label-release-prometheus
spec:
  validationFailureAction: enforce
  rules:
  - name: add-label-release-prometheus
    match:
      resources:
        kinds:
        - Deployment
        selector:
          matchLabels:
            release: prometheus
    exclude:
      resources:
        namespaces:
          - kube-system
          - kube-public
          - kube-node-lease
    validate:
      message: "label `release: prometheus` is required"
      pattern:
        metadata:
          labels:
            release: "?*"

---

apiVersion : kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: disallow-helm-tiller
spec:
  validationFailureAction: enforce
  rules:
  - name: disallow-helm-tiller
    match:
      resources:
        kinds:
        - Pod
    validate:
      message: "Ops! Helm Tiller is not allowed for security reasons."  
      pattern:
        spec:
          containers:
          - name: "*"
            image: "!*tiller*"

---

apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: protect-namespace-deletion
spec:
  validationFailureAction: enforce
  background: false
  rules:
  - name: protected-namespace-deletion
    match:
      resources:
        kinds:
        - Namespace
    ## Update the matchLabels below with your Service label for deletion 
    # exclude:
    #   resources:
    #     namespaces:
    #     - traefik
    #     - ingress
    validate:
      message: "Ops! You are not allowed to remove `Namespace`."
      deny:
        conditions:
        # The request.operation object contains the type of action being performed. 
        # Values are either CREATE, UPDATE, or DELETE.
        - key: "{{request.operation}}"
          operator: In
          value:
          - DELETE
---

apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: protect-loadbalancer-deletion
spec:
  validationFailureAction: enforce
  background: false 
  rules:
  - name: protect-loadbalancer-deletion
    match:
      resources:
        kinds:
        - Service
    ## Update the matchLabels below with your Service label for deletion 
    # exclude:
    #   resources:
    #     selector:
    #       matchLabels:
    #         app: traefik-ingress
    #         app: nginx-ingress
    validate:
      message: "Ops! You are not allowed to remove `Services` of type `LoadBalancer`."
      pattern:
        metadata:
          =(labels):
            =(service-type): ingress-controller
        =(spec):
          =(type): LoadBalancer
      deny:
        conditions:
        # The request.operation object contains the type of action being performed. 
        # Values are either CREATE, UPDATE, or DELETE.
        - key: "{{request.operation}}"
          operator: In
          value:
          - DELETE
