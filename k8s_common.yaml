metadata:
  org: "DevOps"
  maintainer: "devops team (devops@ellesmera.io)"
  description: "Kubernetes clusters"

settings:
  kubeContext: ""
  storageBackend: "secret"
  slackWebhook:  "https://hooks.slack.com/services/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"
  globalHooks:
    successCondition: "Complete"
    deleteOnSuccess: true

# define your helm repositories
helmRepos:
  stable: https://charts.helm.sh/stable
  # argocd - continous deployment
  argo: "https://argoproj.github.io/argo-helm"
  # jfrog tools
  jfrog: "https://charts.jfrog.io"
  # kong api-gateway
  kong: https://charts.konghq.com
  # kong - kuma mesh
  kong-mesh: https://kong.github.io/kong-mesh-charts
  # grafana tools e.g: loki and etc...
  grafana: https://grafana.github.io/helm-charts
  # nginx ingress controller
  ingress-nginx: https://kubernetes.github.io/ingress-nginx
  # kube-prometheus-stack
  prometheus-community: https://prometheus-community.github.io/helm-charts
  # helm automation delivery
  keel: https://charts.keel.sh
  # cert-manager
  jetstack: https://charts.jetstack.io
  # bunch of charts
  bitnami: https://charts.bitnami.com/bitnami
  # ambassador ingress & api-gateway
  datawire: https://www.getambassador.io
  # kubernetes event driven application
  kedacore: https://kedacore.github.io/charts
  # develop, deploy and manage cloud-native applications without requiring any Kubernetes expertise
  shipa-charts: https://shipa-charts.storage.googleapis.com
  # Concourse is an open-source continuous thing-doer.
  concourse: https://concourse-charts.storage.googleapis.com/
  # Datadog logging, monitoring and apm system
  datadog: https://helm.datadoghq.com
  # BotKube is a messaging bot for monitoring and debugging Kubernetes clusters
  infracloudio: https://infracloudio.github.io/charts
  # A progressive delivery tool that automates the release process for applications running on Kubernetes.
  flagger: https://flagger.app
  # High Performance, Kubernetes Native Object Storage
  minio: https://helm.min.io/
  # Edge Router that makes publishing your services a fun and easy experience
  traefik: https://helm.traefik.io/traefik
  # Continuously backup Kubernetes objets as YAML files in git
  katafygio: https://bpineau.github.io/katafygio
  # A delivery workflow for kubernetes
  devtron: https://helm.devtron.ai
  # A scalable, efficient source of container resource metrics for Kubernetes built-in autoscaling pipelines.
  metrics-server: https://kubernetes-sigs.github.io/metrics-server
  # A network load-balancer implementation for Kubernetes using standard routing protocols
  metallb: https://metallb.github.io/metallb
  # Linkerd service mesh
  linkerd: https://helm.linkerd.io/stable
  # Helm-exporter
  sstarcher: https://shanestarcher.com/helm-charts/
  # Netdata monitoring cloud
  netdata: https://netdata.github.io/helmchart/
  #  Keyverno policy engine designed for Kubernetes
  kyverno: https://kyverno.github.io/kyverno/
  # Loft - Secure Cluster Sharing, Self-Service Namespace Provisioning and Virtual Clusters
  loft: https://charts.loft.sh
  # High-quality, ubiquitous, and portable telemetry to enable effective observability 
  open-telemetry: https://open-telemetry.github.io/opentelemetry-helm-charts
  # Kubecost is a comprehensive cost monitoring & optimization solution for teams running Kubernetes.
  kubecost: https://kubecost.github.io/cost-analyzer/
  # extended component suite for Kubernetes, which mainly focuses on 
  # application automations, such as deployment, upgrade, ops and availability protection.
  openkruise: https://openkruise.github.io/charts/


# define your environments and their k8s namespaces
namespaces:
  cert-manager:
    protected: false
    annotations:
      linkerd.io/inject: disabled
  chaos:
    protected: false
    annotations:
      linkerd.io/inject: disabled
  ingress:
    protected: false
    annotations:
      linkerd.io/inject: disabled
  loft:
    protected: false
    annotations:
      linkerd.io/inject: disabled
  miscellaneous:
    protected: false
    annotations:
      linkerd.io/inject: disabled
  monitoring:
    protected: false
    annotations:
      linkerd.io/inject: disabled
    labels:
      control-plane: controller-manager
  observability:
    protected: false
    annotations:
      linkerd.io/inject: disabled
  security:
    protected: false
    annotations:
      linkerd.io/inject: disabled
  velero:
    protected: false
    annotations:
      linkerd.io/inject: disabled
  kubecost:
    protected: false

appsTemplates:

  is_in_use: &enabled
    enabled: true
    test: true
    wait: true
    protected: false
    timeout: 300
    helmFlags:
      - "--atomic"

  not_in_use: &disabled
    enabled: false

apps:

  # Monitoring Block (priority: -160)

    metrics-server:
      # Enable if running via lima and/or minikube
      <<: *disabled
      description: "Manager SSL certficates creation, renew and update."
      group: "monitoring"
      namespace: "monitoring"
      chart: "charts/metrics-server"
      version: "2.9.0"
      priority: -160
      valuesFiles:
        - "charts/metrics-server/values.yaml"

    kubecost:
      # Enable if running via lima and/or minikube
      <<: *enabled
      description: "A comprehensive cost monitoring & optimization solution for teams running Kubernetes."
      group: "cost"
      namespace: "kubecost"
      chart: "kubecost/cost-analyzer"
      version: " 1.94.3"
      priority: -160
      set:
        global.prometheus.enabled: false
        global.prometheus.fqdn: "http://prometheus.$K8SCLUSTER.$K8S_DOMAIN.monitoring.svc"
        global.prometheus.insecureSkipVerify: true 
        global.grafana.enabled: false
        global.grafana.domainName: grafana.$K8SCLUSTER.$K8S_DOMAIN.monitoring.svc
        ingress.enabled: true
        ingress.className: $INGRESS_CLASS
        ingress.hosts[0]: kubecost.$K8SCLUSTER.$K8S_DOMAIN
        kubecostToken: $KUBECOST
      valuesFiles:

  # Security block (priority: -120)

    kyverno:
      <<: *enabled
      description: "Kubernetes Native Policy Management"
      group: "security"
      namespace: "security" 
      chart: "kyverno/kyverno" 
      version: "v2.1.10"
      priority: -120
      set:
        serviceMonitor.enabled: false
        serviceMonitor.additionalLabels.release: "prometheus"
        createSelfSignedCert: true
      valuesFiles:

    cert-manager:
      <<: *enabled
      description: "Manager SSL certficates creation, renew and update."
      group: "security"
      namespace: "cert-manager"
      chart: "jetstack/cert-manager"
      version: "v1.8.0"
      priority: -119
      set:
        installCRDs: true
        prometheus.serviceMonitor.enabled: true
      valuesFiles:

  # Ingress Block (priority: -110)

    ingress-classes:
      <<: *disabled
      description: "IngressClass for ingress controllers"
      group: "ingress"
      namespace: "ingress"
      chart: "charts/ingress-classes"
      version: "1.0.0"
      priority: -107
      valuesFiles:
        - "charts/ingress-classes/values.yaml"
